install.packages("blogdown")
install.packages("rstan")
pkgbuild::has_build_tools(debug = TRUE)
dotR <- file.path(Sys.getenv("HOME"), ".R")
if (!file.exists(dotR)) dir.create(dotR)
M <- file.path(dotR, ifelse(.Platform$OS.type == "windows", "Makevars.win", "Makevars"))
if (!file.exists(M)) file.create(M)
cat(if( grepl("^darwin", R.version$os)) "\nCXX14FLAGS=-O3 -march=native -mtune=native -arch x86_64 -ftemplate-depth-256" else
if (.Platform$OS.type == "windows") "\nCXX14FLAGS=-O3 -mtune=native -mmmx -msse -msse2 -msse3 -mssse3 -msse4.1 -msse4.2" else
"CXX14FLAGS = -fPIC",
file = M, sep = "\n", append = TRUE)
schools_dat <- list(J = 8,
y = c(28,  8, -3,  7, -1,  1, 18, 12),
sigma = c(15, 10, 16, 11,  9, 11, 10, 18))
fit <- rstan::stan(file = 'schools.stan', data = schools_dat)
schools_dat <- list(J = 8,
y = c(28,  8, -3,  7, -1,  1, 18, 12),
sigma = c(15, 10, 16, 11,  9, 11, 10, 18))
fit <- rstan::stan(file = 'schools.stan', data = schools_dat)
dotR <- file.path(Sys.getenv("HOME"), ".R")
if (!file.exists(dotR)) dir.create(dotR)
M <- file.path(dotR, ifelse(.Platform$OS.type == "windows", "Makevars.win", "Makevars"))
if (!file.exists(M)) file.create(M)
fit <- rstan::stan(file = 'schools.stan', data = schools_dat)
cat(if( grepl("^darwin", R.version$os)) "\nCXX14FLAGS=-O3 -march=native -mtune=native -arch x86_64 -ftemplate-depth-256" else
if (.Platform$OS.type == "windows") "\nCXX14FLAGS=-O3 -mtune=native -mmmx -msse -msse2 -msse3 -mssse3 -msse4.1 -msse4.2" else
"CXX14FLAGS = -fPIC",
file = M, sep = "\n", append = TRUE)
dotR <- file.path(Sys.getenv("HOME"), ".R")
if (!file.exists(dotR)) dir.create(dotR)
M <- file.path(dotR, ifelse(.Platform$OS.type == "windows", "Makevars.win", "Makevars"))
if (!file.exists(M)) file.create(M)
cat(if( grepl("^darwin", R.version$os)) "\nCXX14FLAGS=-O3 -march=native -mtune=native -arch x86_64 -ftemplate-depth-256" else
if (.Platform$OS.type == "windows") "\nCXX14FLAGS=-O3 -mtune=native -mmmx -msse -msse2 -msse3 -mssse3 -msse4.1 -msse4.2" else
"CXX14FLAGS = -fPIC",
file = M, sep = "\n", append = TRUE)
schools_dat <- list(J = 8,
y = c(28,  8, -3,  7, -1,  1, 18, 12),
sigma = c(15, 10, 16, 11,  9, 11, 10, 18))
fit <- rstan::stan(file = 'schools.stan', data = schools_dat)
library(rstan)
fit <- rstan::stan(file = 'schools.stan', data = schools_dat)
fit <- rstan::stan(file = 'schools.stan', data = schools_dat)
install.packages("devtools")
devtools::install_version("withr", "2.2.0")
schools_dat <- list(J = 8,
y = c(28,  8, -3,  7, -1,  1, 18, 12),
sigma = c(15, 10, 16, 11,  9, 11, 10, 18))
fit <- rstan::stan(file = 'schools.stan', data = schools_dat)
schools_dat <- list(J = 8,
y = c(28,  8, -3,  7, -1,  1, 18, 12),
sigma = c(15, 10, 16, 11,  9, 11, 10, 18))
fit <- rstan::stan(file = 'schools.stan', data = schools_dat)
devtools::install_github("r-lib/withr")
schools_dat <- list(J = 8,
y = c(28,  8, -3,  7, -1,  1, 18, 12),
sigma = c(15, 10, 16, 11,  9, 11, 10, 18))
fit <- rstan::stan(file = 'schools.stan', data = schools_dat)
devtools::install_version("withr", "2.2.0")
devtools::install_github("https://github.com/TheoreticalEcology/s-jSDM", subdir = "sjSDM")
sjSDM::install_sjSDM(version = "cpu")
devtools::install_github("https://github.com/TheoreticalEcology/s-jSDM", subdir = "sjSDM")
devtools::install_github("https://github.com/TheoreticalEcology/s-jSDM", subdir = "sjSDM", force = TRUE)
sjSDM::install_sjSDM(version = "cpu")
sjSDM::install_sjSDM(version = "cpu")
sjSDM::install_sjSDM(version = "cpu")
Sys.which("python")
library(reticulate)
os <- import("os")
os$listdir(".")
pyro <- import("pyro")
pyro <- import("pyro5")
library(sjSDM)
community <- simulate_SDM(sites = 100, species = 10, env = 5)
remove.packages("sjSDM", lib="~/R/win-library/4.0")
install.packages(c("blogdown", "bookdown", "callr", "cli", "clipr", "digest", "DT", "htmlwidgets", "knitr", "labeling", "matrixStats", "ps", "rlang", "rmarkdown", "servr", "tibble", "tinytex", "xfun"))
devtools::install_github("https://github.com/TheoreticalEcology/s-jSDM", subdir = "sjSDM")
Sys.which("python")
readClipboard()
reticulate::use_python("C:\\Users\\Fiona\\anaconda3/python")
devtools::install_github("https://github.com/TheoreticalEcology/s-jSDM", subdir = "sjSDM")
devtools::install_github("https://github.com/TheoreticalEcology/s-jSDM", subdir = "sjSDM")
library(sJSDM)
library(sjSDM)
install_sjSDM(version = "cpu")
library(sjSDM)
community <- simulate_SDM(sites = 100, species = 10, env = 5)
Env <- community$env_weights
Occ <- community$response
model <- sjSDM(X = Env, Y = Occ, formula = ~0+X1*X2 + X3 + X4)
?sjSDM
SP <- matrix(rnorm(200, 0, 0.3), 100, 2) # spatial coordinates (no effect on species occurences)
model <- sjSDM(Y = Occ, env = linear(data = Env, formula = ~X1+X2+X3), spatial = linear(data = SP, formula = ~0+X1:X2), se = TRUE, family=binomial("probit"), sampling = 100L)
summary(model)
imp = importance(model)
print(imp)
plot(imp)
an = anova(model)
print(an)
install.packages(c("backports", "colorspace", "R6", "rstudioapi", "testthat", "tinytex", "V8", "xfun"))
blogdown::serve_site()
setwd("~/GitHub/Website")
blogdown::serve_site()
